{"version":3,"file":"static/js/529.f5e79847.chunk.js","mappings":"0LAGO,MAAMA,GAAgBC,EAAAA,EAAAA,IAAOC,EAAAA,GAAQ;;aAE9BC,GAAUA,EAAMC,MAAMC,MAAM;mBACtBF,GAAUA,EAAMC,MAAMC,MAAM;;YAEnCF,GAAUA,EAAMC,MAAME,QAAQC;mBACvBJ,GAAUA,EAAMC,MAAMI,MAAMC;sBACzBN,GAAUA,EAAMC,MAAMM,OAAOC;;;;;;aAMtCR,GAAUA,EAAMC,MAAMM,OAAOE;oBACtBT,GAAUA,EAAMC,MAAMM,OAAOG;wBACzBV,GAAUA,EAAMC,MAAMM,OAAOI;;kCCbtD,MAsBA,EAtBoBC,IAAgB,IAAf,MAAEC,GAAOD,EAC5B,MAAME,GAAWC,EAAAA,EAAAA,MAEjB,OACEC,EAAAA,EAAAA,KAACC,EAAAA,EAAO,CAAAC,SACY,IAAjBL,EAAMM,QACLH,EAAAA,EAAAA,KAAA,KAAAE,SAAG,4HAEHF,EAAAA,EAAAA,KAAA,MAAAE,SACGL,EAAMO,KAAKC,IACVL,EAAAA,EAAAA,KAAA,MAAAE,UACEF,EAAAA,EAAAA,KAACnB,EAAa,CAACyB,GAAI,GAAGD,EAAKE,MAAOC,MAAO,CAAEC,KAAMX,GAAWI,SACzDG,EAAKK,SAFDL,EAAKE,UAQZ,E,cCjBd,MA2CA,EA3CqBI,KACnB,MAAOC,EAAUC,IAAeC,EAAAA,EAAAA,UAAS,KAClCC,EAAWC,IAAgBF,EAAAA,EAAAA,WAAS,GA8B3C,OA5BAG,EAAAA,EAAAA,YAAU,KACR,MAAMC,EAAa,IAAIC,gBAiBvB,OAhBAC,iBACE,IACEJ,GAAa,GACb,MAAMK,QAAiBC,EAAAA,EAAAA,IAAYJ,EAAWK,QAE9CV,EAAYQ,EAASG,KACvB,CAAE,MAAOC,GACPC,EAAAA,GAAMD,MACJ,4WAEJ,CAAC,QACCT,GAAa,EACf,CACF,CACAJ,GAEO,KACLC,EAAY,IACZK,EAAWS,OAAO,CACnB,GACA,KAEHV,EAAAA,EAAAA,YAAU,QAEP,CAACF,KAGFf,EAAAA,EAAAA,KAAA4B,EAAAA,SAAA,CAAA1B,SACGa,GACCf,EAAAA,EAAAA,KAAC6B,EAAAA,EAAS,CAACC,MAAM,UAAUC,MAAM,UAEjC/B,EAAAA,EAAAA,KAACgC,EAAW,CAACnC,MAAOe,KAErB,C","sources":["components/ProjectList/ProjectList.styled.js","components/ProjectList/ProjectList.jsx","pages/ProjectsPage/ProjectsPage.jsx"],"sourcesContent":["import styled from \"styled-components\";\nimport { NavLink } from \"react-router-dom\";\n\nexport const StyledNavLink = styled(NavLink)`\n  display: block;\n  padding: ${(props) => props.theme.space[3]}px;\n  margin-bottom: ${(props) => props.theme.space[3]}px;\n\n  border: ${(props) => props.theme.borders.bold};\n  border-radius: ${(props) => props.theme.radii.normal};\n  background-color: ${(props) => props.theme.colors.primary};\n\n  /* text-transform: uppercase; */\n  font-size: 16px;\n  &:hover,\n  &:focus {\n    color: ${(props) => props.theme.colors.white};\n    border-color: ${(props) => props.theme.colors.black};\n    background-color: ${(props) => props.theme.colors.hover};\n  }\n`;\n","import React from \"react\";\nimport { StyledNavLink } from \"./ProjectList.styled\";\nimport Section from \"../Section/Section\";\nimport { useLocation } from \"react-router-dom\";\n\nconst ProjectList = ({ items }) => {\n  const location = useLocation();\n  // console.log(\"location: \", location);\n  return (\n    <Section>\n      {items.length === 0 ? (\n        <p>У вас ще немає проектів</p>\n      ) : (\n        <ul>\n          {items.map((item) => (\n            <li key={item._id}>\n              <StyledNavLink to={`${item._id}`} state={{ from: location }}>\n                {item.Title}\n              </StyledNavLink>\n            </li>\n          ))}\n        </ul>\n      )}\n    </Section>\n  );\n};\n\nexport default ProjectList;\n","import React, { useState, useEffect } from \"react\";\nimport { getProjects } from \"../../services\";\nimport { toast } from \"react-toastify\";\nimport ProjectList from \"../../components/ProjectList/ProjectList\";\nimport { BarLoader } from \"react-spinners\";\n\nconst ProjectsPage = () => {\n  const [projects, setProjects] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n\n  useEffect(() => {\n    const controller = new AbortController();\n    async function projects() {\n      try {\n        setIsLoading(true);\n        const response = await getProjects(controller.signal);\n        // console.log(\"response effect: \", response);\n        setProjects(response.data);\n      } catch (error) {\n        toast.error(\n          \"Не вдалось завантажити проекти, спробуйте перезавантажити сторінку\"\n        );\n      } finally {\n        setIsLoading(false);\n      }\n    }\n    projects();\n\n    return () => {\n      setProjects([]);\n      controller.abort();\n    };\n  }, []);\n\n  useEffect(() => {\n    // console.log(\"isLoading\", isLoading);\n  }, [isLoading]);\n\n  return (\n    <>\n      {isLoading ? (\n        <BarLoader color=\"#125b56\" width=\"100%\" />\n      ) : (\n        <ProjectList items={projects}></ProjectList>\n      )}\n    </>\n  );\n};\n\nexport default ProjectsPage;\n"],"names":["StyledNavLink","styled","NavLink","props","theme","space","borders","bold","radii","normal","colors","primary","white","black","hover","_ref","items","location","useLocation","_jsx","Section","children","length","map","item","to","_id","state","from","Title","ProjectsPage","projects","setProjects","useState","isLoading","setIsLoading","useEffect","controller","AbortController","async","response","getProjects","signal","data","error","toast","abort","_Fragment","BarLoader","color","width","ProjectList"],"sourceRoot":""}