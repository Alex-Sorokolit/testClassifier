{"version":3,"file":"static/js/966.b42ca5b1.chunk.js","mappings":"0OASA,MA4CA,EA5CyBA,KAAO,IAADC,EAAAC,EAC7B,MAAM,GAAEC,IAAOC,EAAAA,EAAAA,MACRC,EAAUC,IAAeC,EAAAA,EAAAA,UAAS,MAEnCC,EAAmC,QAAvBP,EAAiB,QAAjBC,GADDO,EAAAA,EAAAA,MACaC,aAAK,IAAAR,OAAA,EAAdA,EAAgBS,YAAI,IAAAV,EAAAA,EAAI,KACtCW,EAAWC,IAAgBN,EAAAA,EAAAA,WAAS,GAuB3C,OApBAO,EAAAA,EAAAA,YAAU,KACR,MAAMC,EAAa,IAAIC,gBAcvB,OAbAC,eAA2Bd,GACzB,IACEU,GAAa,GACb,MAAMK,QAAiBC,EAAAA,EAAAA,IAAgBhB,EAAIY,EAAWK,QAEtDd,EAAYY,EAASG,KACvB,CAAE,MACAC,EAAAA,GAAMC,MAAM,4JACd,CAAC,QACCV,GAAa,EACf,CACF,CACAW,CAAYrB,GACL,KACLY,EAAWU,OAAO,CACnB,GACA,CAACtB,KAGFuB,EAAAA,EAAAA,KAAAC,EAAAA,SAAA,CAAAC,UACEC,EAAAA,EAAAA,MAACC,EAAAA,EAAO,CAAAF,SAAA,EACNF,EAAAA,EAAAA,KAACK,EAAAA,GAAO,CAACC,GAAIxB,EAAaoB,UACxBF,EAAAA,EAAAA,KAACO,EAAAA,IAAa,CAACC,KAAM,OAEtBtB,GACCc,EAAAA,EAAAA,KAACS,EAAAA,EAAS,CAACC,MAAM,UAAUC,MAAM,UAEjCX,EAAAA,EAAAA,KAACY,EAAAA,EAAQ,CAACC,QAASlC,QAGtB,C","sources":["pages/MaterialInfoPage/MaterialInfoPage.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { useParams, useLocation, NavLink } from \"react-router-dom\";\nimport { toast } from \"react-toastify\";\nimport { IoMdBackspace } from \"react-icons/io\";\nimport Section from \"../../components/Section/Section\";\nimport { getMaterialById } from \"../../services/api\";\nimport Category from \"../../components/Category/Category\";\nimport { BarLoader } from \"react-spinners\";\n\nconst MaterialInfoPage = () => {\n  const { id } = useParams();\n  const [material, setMaterial] = useState(null);\n  const location = useLocation();\n  const backLinkHref = location.state?.from ?? \"/\";\n  const [isLoading, setIsLoading] = useState(true);\n\n  // Отримати по id\n  useEffect(() => {\n    const controller = new AbortController();\n    async function getMaterial(id) {\n      try {\n        setIsLoading(true);\n        const response = await getMaterialById(id, controller.signal);\n\n        setMaterial(response.data);\n      } catch {\n        toast.error(\"Не вдалось отримати матеріал\");\n      } finally {\n        setIsLoading(false);\n      }\n    }\n    getMaterial(id);\n    return () => {\n      controller.abort();\n    };\n  }, [id]);\n\n  return (\n    <>\n      <Section>\n        <NavLink to={backLinkHref}>\n          <IoMdBackspace size={40} />\n        </NavLink>\n        {isLoading ? (\n          <BarLoader color=\"#125b56\" width=\"100%\" />\n        ) : (\n          <Category element={material} />\n        )}\n      </Section>\n    </>\n  );\n};\n\nexport default MaterialInfoPage;\n"],"names":["MaterialInfoPage","_location$state$from","_location$state","id","useParams","material","setMaterial","useState","backLinkHref","useLocation","state","from","isLoading","setIsLoading","useEffect","controller","AbortController","async","response","getMaterialById","signal","data","toast","error","getMaterial","abort","_jsx","_Fragment","children","_jsxs","Section","NavLink","to","IoMdBackspace","size","BarLoader","color","width","Category","element"],"sourceRoot":""}